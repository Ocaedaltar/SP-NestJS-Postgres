version: "3.8"

services:
  database:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/posgresql/data
    networks:
      - postgres_network

  # nginx:
  #   image: nginx:latest
  #   restart: always
  #   environment:
  #     NGINX_PORT: ${NGINX_PORT}
  #   volumes:
  #     - ./configuration/nginx.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - "${NGINX_PORT}:${NGINX_PORT}"
  #   depends_on:
  #     - api

  api:
    container_name: ${PROJECT_NAME}_api
    image: ${PROJECT_NAME}-api-prod
    restart: unless-stopped
    build:
      context: configuration/back
      dockerfile: Dockerfile
    environment:
      BACK_PORT: ${BACK_PORT}
      BACK_HOST: ${BACK_HOST}
      FRONT_URL: ${FRONT_URL}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      HASH_SALT_ROUND: ${HASH_SALT_ROUND}
      SWAGGER: ${SWAGGER}
    ports:
      - "${BACK_PORT}:${BACK_PORT}"
    volumes:
      - "./back:/app"
    networks:
      - postgres_network
    depends_on:
      - database

  client:
    container_name: ${PROJECT_NAME}_client
    image: ${PROJECT_NAME}-client-prod
    restart: unless-stopped
    build:
      context: configuration/front
      dockerfile: Dockerfile
    environment:
      VITE_API: ${API}
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
    volumes:
      - "./front:/app"
    networks:
      - postgres_network
    depends_on:
      - api

networks:
  postgres_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local